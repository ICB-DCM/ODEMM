%% Definition of model
M.name = 'NGFErk_skew_norm'; 
M.n_subpop = 2; 
M.model = @(T,theta,u)simulate_SigmaPoints_sPsET_loglog_corr(T,theta,u(1)); 
M.theta = @(xi,u)[(2592480341699211*xi(1))/1125899906842624;(2592480341699211*xi(2))/1125899906842624;(2592480341699211*xi(3))/1125899906842624;(2592480341699211*xi(4))/1125899906842624;(2592480341699211*u(2)*xi(5))/1125899906842624 - (2592480341699211*xi(6)*(u(2) - 1))/1125899906842624;(2592480341699211*xi(7))/1125899906842624;log(log(10^(2*u(2)*xi(8) - 2*xi(9)*(u(2) - 1)) + 1));(2592480341699211*xi(11))/1125899906842624;log(log(10^(2*xi(10)) + 1))];
M.dthetadxi= @(xi,u)[2592480341699211/1125899906842624,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0;...
	0,2592480341699211/1125899906842624,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0;...
	0,0,2592480341699211/1125899906842624,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0;...
	0,0,0,2592480341699211/1125899906842624,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0;...
	0,0,0,0,(2592480341699211*u(2))/1125899906842624,2592480341699211/1125899906842624 - (2592480341699211*u(2))/1125899906842624,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0;...
	0,0,0,0,0,0,2592480341699211/1125899906842624,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0;...
	0,0,0,0,0,0,0,(2*10^(2*u(2)*xi(8) - 2*xi(9)*(u(2) - 1))*u(2)*log(10))/(log(10^(2*u(2)*xi(8) - 2*xi(9)*(u(2) - 1)) + 1)*(10^(2*u(2)*xi(8) - 2*xi(9)*(u(2) - 1)) + 1)),-(10^(2*u(2)*xi(8) - 2*xi(9)*(u(2) - 1))*log(10)*(2*u(2) - 2))/(log(10^(2*u(2)*xi(8) - 2*xi(9)*(u(2) - 1)) + 1)*(10^(2*u(2)*xi(8) - 2*xi(9)*(u(2) - 1)) + 1)),0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0;...
	0,0,0,0,0,0,0,0,0,0,2592480341699211/1125899906842624,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0;...
	0,0,0,0,0,0,0,0,0,(2*10^(2*xi(10))*log(10))/(log(10^(2*xi(10)) + 1)*(10^(2*xi(10)) + 1)),0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0];

% Subpopulation 1 
% Experiment 1 
s=1; e=1;
M.mean_ind{s,e} = [1];
M.var_ind{s,e} = [4];
M.w_ind{s,e} = [];
M.delta{s,e} = @(t,x,xi,u)[xi(30)];
M.ddeltadxi{s,e} = @(t,x,dxdxi,xi,u)bsxfun(@plus, [0],...
	[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0]);

M.mu{s,e} = @(t,x,delta,xi,u) [x(:,1) - (7186705221432913*delta)/9007199254740992];
M.dmudxi{s,e} = @(t,x,dxdxi,delta,ddeltadxi,xi,u) bsxfun(@plus, [permute(dxdxi(1,:,:),[3,2,1])],...
	bsxfun(@plus,[-bsxfun(@rdivide,(bsxfun(@times,7186705221432913,ddeltadxi)),9007199254740992)],...
	[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]));

M.Sigma{s,e} = @(t,x,delta,xi,u) func_Sigma_skew_norm(t,x,delta,xi,1,[10^(2*xi(23))],'additive');
M.dSigmadxi{s,e} = @(t,x,dxdxi,delta,ddeltadxi,xi,u) func_dSigmadxi_skew_norm(t,x,dxdxi,delta,ddeltadxi,xi,1,[10^(2*xi(23))],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2*10^(2*xi(23))*log(10),0,0,0,0,0,0,0,0,0],'additive');

M.w{s,e} = @(t,x,xi,u)[xi(29);xi(29);xi(29);xi(29);xi(29);xi(29);xi(29)];
M.dwdxi{s,e} = @(t,x,dxdxi,xi,u)bsxfun(@plus, [0;0;0;0;0;0;0],...
	[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0;...
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0;...
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0;...
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0;...
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0;...
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0;...
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0]);
M.distribution{s,e} = 'skew_norm';

M.u{s,e} = [0];
r=1;
M.scaling{r,e} = @(xi,u)[1];
M.offset{r,e} = @(xi,u)[10^xi(12)];
M.dscalingdxi{r,e} = @(xi,u)[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0];
M.doffsetdxi{r,e} = @(xi,u)[0,0,0,0,0,0,0,0,0,0,0,10^xi(12)*log(10),0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0];
% Subpopulation 1 
% Experiment 2 
s=1; e=2;
M.mean_ind{s,e} = [1];
M.var_ind{s,e} = [4];
M.w_ind{s,e} = [];
M.delta{s,e} = @(t,x,xi,u)[xi(30)];
M.ddeltadxi{s,e} = @(t,x,dxdxi,xi,u)bsxfun(@plus, [0],...
	[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0]);

M.mu{s,e} = @(t,x,delta,xi,u) [x(:,1) - (7186705221432913*delta)/9007199254740992];
M.dmudxi{s,e} = @(t,x,dxdxi,delta,ddeltadxi,xi,u) bsxfun(@plus, [permute(dxdxi(1,:,:),[3,2,1])],...
	bsxfun(@plus,[-bsxfun(@rdivide,(bsxfun(@times,7186705221432913,ddeltadxi)),9007199254740992)],...
	[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]));

M.Sigma{s,e} = @(t,x,delta,xi,u) func_Sigma_skew_norm(t,x,delta,xi,1,[10^(2*xi(24))],'additive');
M.dSigmadxi{s,e} = @(t,x,dxdxi,delta,ddeltadxi,xi,u) func_dSigmadxi_skew_norm(t,x,dxdxi,delta,ddeltadxi,xi,1,[10^(2*xi(24))],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2*10^(2*xi(24))*log(10),0,0,0,0,0,0,0,0],'additive');

M.w{s,e} = @(t,x,xi,u)[xi(29)];
M.dwdxi{s,e} = @(t,x,dxdxi,xi,u)bsxfun(@plus, [0],...
	[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0]);
M.distribution{s,e} = 'skew_norm';

M.u{s,e} = [0];
r=1;
M.scaling{r,e} = @(xi,u)[10^xi(13)];
M.offset{r,e} = @(xi,u)[10^xi(14)];
M.dscalingdxi{r,e} = @(xi,u)[0,0,0,0,0,0,0,0,0,0,0,0,10^xi(13)*log(10),0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0];
M.doffsetdxi{r,e} = @(xi,u)[0,0,0,0,0,0,0,0,0,0,0,0,0,10^xi(14)*log(10),0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0];
% Subpopulation 1 
% Experiment 3 
s=1; e=3;
M.mean_ind{s,e} = [3,1];
M.var_ind{s,e} = [9,6,4];
M.w_ind{s,e} = [];
M.delta{s,e} = @(t,x,xi,u)[xi(31);xi(30)];
M.ddeltadxi{s,e} = @(t,x,dxdxi,xi,u)bsxfun(@plus, [0;0],...
	[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0;...
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0]);

M.mu{s,e} = @(t,x,delta,xi,u) [x(:,1) - sqrt(2/pi)*delta(1),x(:,2) - sqrt(2/pi)*delta(2)];

M.dmudxi{s,e} = @(t,x,dxdxi,delta,ddeltadxi,xi,u) func_dmudxi_skew_norm(t,x,dxdxi,delta,ddeltadxi,xi,u,2);

M.Sigma{s,e} = @(t,x,delta,xi,u) func_Sigma_skew_norm(t,x,delta,xi,2,[10^(2*xi(27));10^(2*xi(25))],'additive');
M.dSigmadxi{s,e} = @(t,x,dxdxi,delta,ddeltadxi,xi,u) func_dSigmadxi_skew_norm(t,x,dxdxi,delta,ddeltadxi,xi,2,[10^(2*xi(27));10^(2*xi(25))],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2*10^(2*xi(27))*log(10),0,0,0,0,0;...
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2*10^(2*xi(25))*log(10),0,0,0,0,0,0,0],'additive');

M.w{s,e} = @(t,x,xi,u)[xi(29)];
M.dwdxi{s,e} = @(t,x,dxdxi,xi,u)bsxfun(@plus, [0],...
	[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0]);
M.distribution{s,e} = 'skew_norm';

M.u{s,e} = [0];
r=1;
M.scaling{r,e} = @(xi,u)[10^xi(19);10^xi(15)];
M.offset{r,e} = @(xi,u)[10^xi(20);10^xi(16)];
M.dscalingdxi{r,e} = @(xi,u)[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10^xi(19)*log(10),0,0,0,0,0,0,0,0,0,0,0,0,0;...
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,10^xi(15)*log(10),0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0];
M.doffsetdxi{r,e} = @(xi,u)[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10^xi(20)*log(10),0,0,0,0,0,0,0,0,0,0,0,0;...
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10^xi(16)*log(10),0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0];
% Subpopulation 1 
% Experiment 4 
s=1; e=4;
M.mean_ind{s,e} = [2,1];
M.var_ind{s,e} = [7,5,4];
M.w_ind{s,e} = [];
M.delta{s,e} = @(t,x,xi,u)[xi(32);xi(30)];
M.ddeltadxi{s,e} = @(t,x,dxdxi,xi,u)bsxfun(@plus, [0;0],...
	[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1;...
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0]);

M.mu{s,e} = @(t,x,delta,xi,u) [x(:,1) - sqrt(2/pi)*delta(1),x(:,2) - sqrt(2/pi)*delta(2)];

M.dmudxi{s,e} = @(t,x,dxdxi,delta,ddeltadxi,xi,u) func_dmudxi_skew_norm(t,x,dxdxi,delta,ddeltadxi,xi,u,2);

M.Sigma{s,e} = @(t,x,delta,xi,u) func_Sigma_skew_norm(t,x,delta,xi,2,[10^(2*xi(28));10^(2*xi(26))],'additive');
M.dSigmadxi{s,e} = @(t,x,dxdxi,delta,ddeltadxi,xi,u) func_dSigmadxi_skew_norm(t,x,dxdxi,delta,ddeltadxi,xi,2,[10^(2*xi(28));10^(2*xi(26))],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2*10^(2*xi(28))*log(10),0,0,0,0;...
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2*10^(2*xi(26))*log(10),0,0,0,0,0,0],'additive');

M.w{s,e} = @(t,x,xi,u)[xi(29)];
M.dwdxi{s,e} = @(t,x,dxdxi,xi,u)bsxfun(@plus, [0],...
	[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0]);
M.distribution{s,e} = 'skew_norm';

M.u{s,e} = [0];
r=1;
M.scaling{r,e} = @(xi,u)[10^xi(21);10^xi(17)];
M.offset{r,e} = @(xi,u)[10^xi(22);10^xi(18)];
M.dscalingdxi{r,e} = @(xi,u)[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10^xi(21)*log(10),0,0,0,0,0,0,0,0,0,0,0;...
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10^xi(17)*log(10),0,0,0,0,0,0,0,0,0,0,0,0,0,0,0];
M.doffsetdxi{r,e} = @(xi,u)[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10^xi(22)*log(10),0,0,0,0,0,0,0,0,0,0;...
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10^xi(18)*log(10),0,0,0,0,0,0,0,0,0,0,0,0,0,0];
% Subpopulation 2 
% Experiment 1 
s=2; e=1;
M.mean_ind{s,e} = [1];
M.var_ind{s,e} = [4];
M.w_ind{s,e} = [];
M.delta{s,e} = @(t,x,xi,u)[xi(30)];
M.ddeltadxi{s,e} = @(t,x,dxdxi,xi,u)bsxfun(@plus, [0],...
	[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0]);

M.mu{s,e} = @(t,x,delta,xi,u) [x(:,1) - (7186705221432913*delta)/9007199254740992];
M.dmudxi{s,e} = @(t,x,dxdxi,delta,ddeltadxi,xi,u) bsxfun(@plus, [permute(dxdxi(1,:,:),[3,2,1])],...
	bsxfun(@plus,[-bsxfun(@rdivide,(bsxfun(@times,7186705221432913,ddeltadxi)),9007199254740992)],...
	[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]));

M.Sigma{s,e} = @(t,x,delta,xi,u) func_Sigma_skew_norm(t,x,delta,xi,1,[10^(2*xi(23))],'additive');
M.dSigmadxi{s,e} = @(t,x,dxdxi,delta,ddeltadxi,xi,u) func_dSigmadxi_skew_norm(t,x,dxdxi,delta,ddeltadxi,xi,1,[10^(2*xi(23))],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2*10^(2*xi(23))*log(10),0,0,0,0,0,0,0,0,0],'additive');

M.w{s,e} = @(t,x,xi,u)[1 - xi(29);1 - xi(29);1 - xi(29);1 - xi(29);1 - xi(29);1 - xi(29);1 - xi(29)];
M.dwdxi{s,e} = @(t,x,dxdxi,xi,u)bsxfun(@plus, [0;0;0;0;0;0;0],...
	[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1,0,0,0;...
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1,0,0,0;...
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1,0,0,0;...
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1,0,0,0;...
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1,0,0,0;...
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1,0,0,0;...
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1,0,0,0]);
M.distribution{s,e} = 'skew_norm';

M.u{s,e} = [1];
r=1;
M.scaling{r,e} = @(xi,u)[1];
M.offset{r,e} = @(xi,u)[10^xi(12)];
M.dscalingdxi{r,e} = @(xi,u)[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0];
M.doffsetdxi{r,e} = @(xi,u)[0,0,0,0,0,0,0,0,0,0,0,10^xi(12)*log(10),0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0];
% Subpopulation 2 
% Experiment 2 
s=2; e=2;
M.mean_ind{s,e} = [1];
M.var_ind{s,e} = [4];
M.w_ind{s,e} = [];
M.delta{s,e} = @(t,x,xi,u)[xi(30)];
M.ddeltadxi{s,e} = @(t,x,dxdxi,xi,u)bsxfun(@plus, [0],...
	[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0]);

M.mu{s,e} = @(t,x,delta,xi,u) [x(:,1) - (7186705221432913*delta)/9007199254740992];
M.dmudxi{s,e} = @(t,x,dxdxi,delta,ddeltadxi,xi,u) bsxfun(@plus, [permute(dxdxi(1,:,:),[3,2,1])],...
	bsxfun(@plus,[-bsxfun(@rdivide,(bsxfun(@times,7186705221432913,ddeltadxi)),9007199254740992)],...
	[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]));

M.Sigma{s,e} = @(t,x,delta,xi,u) func_Sigma_skew_norm(t,x,delta,xi,1,[10^(2*xi(24))],'additive');
M.dSigmadxi{s,e} = @(t,x,dxdxi,delta,ddeltadxi,xi,u) func_dSigmadxi_skew_norm(t,x,dxdxi,delta,ddeltadxi,xi,1,[10^(2*xi(24))],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2*10^(2*xi(24))*log(10),0,0,0,0,0,0,0,0],'additive');

M.w{s,e} = @(t,x,xi,u)[1 - xi(29)];
M.dwdxi{s,e} = @(t,x,dxdxi,xi,u)bsxfun(@plus, [0],...
	[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1,0,0,0]);
M.distribution{s,e} = 'skew_norm';

M.u{s,e} = [1];
r=1;
M.scaling{r,e} = @(xi,u)[10^xi(13)];
M.offset{r,e} = @(xi,u)[10^xi(14)];
M.dscalingdxi{r,e} = @(xi,u)[0,0,0,0,0,0,0,0,0,0,0,0,10^xi(13)*log(10),0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0];
M.doffsetdxi{r,e} = @(xi,u)[0,0,0,0,0,0,0,0,0,0,0,0,0,10^xi(14)*log(10),0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0];
% Subpopulation 2 
% Experiment 3 
s=2; e=3;
M.mean_ind{s,e} = [3,1];
M.var_ind{s,e} = [9,6,4];
M.w_ind{s,e} = [];
M.delta{s,e} = @(t,x,xi,u)[xi(31);xi(30)];
M.ddeltadxi{s,e} = @(t,x,dxdxi,xi,u)bsxfun(@plus, [0;0],...
	[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0;...
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0]);

M.mu{s,e} = @(t,x,delta,xi,u) [x(:,1) - sqrt(2/pi)*delta(1),x(:,2) - sqrt(2/pi)*delta(2)];

M.dmudxi{s,e} = @(t,x,dxdxi,delta,ddeltadxi,xi,u) func_dmudxi_skew_norm(t,x,dxdxi,delta,ddeltadxi,xi,u,2);

M.Sigma{s,e} = @(t,x,delta,xi,u) func_Sigma_skew_norm(t,x,delta,xi,2,[10^(2*xi(27));10^(2*xi(25))],'additive');
M.dSigmadxi{s,e} = @(t,x,dxdxi,delta,ddeltadxi,xi,u) func_dSigmadxi_skew_norm(t,x,dxdxi,delta,ddeltadxi,xi,2,[10^(2*xi(27));10^(2*xi(25))],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2*10^(2*xi(27))*log(10),0,0,0,0,0;...
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2*10^(2*xi(25))*log(10),0,0,0,0,0,0,0],'additive');

M.w{s,e} = @(t,x,xi,u)[1 - xi(29)];
M.dwdxi{s,e} = @(t,x,dxdxi,xi,u)bsxfun(@plus, [0],...
	[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1,0,0,0]);
M.distribution{s,e} = 'skew_norm';

M.u{s,e} = [1];
r=1;
M.scaling{r,e} = @(xi,u)[10^xi(19);10^xi(15)];
M.offset{r,e} = @(xi,u)[10^xi(20);10^xi(16)];
M.dscalingdxi{r,e} = @(xi,u)[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10^xi(19)*log(10),0,0,0,0,0,0,0,0,0,0,0,0,0;...
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,10^xi(15)*log(10),0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0];
M.doffsetdxi{r,e} = @(xi,u)[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10^xi(20)*log(10),0,0,0,0,0,0,0,0,0,0,0,0;...
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10^xi(16)*log(10),0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0];
% Subpopulation 2 
% Experiment 4 
s=2; e=4;
M.mean_ind{s,e} = [2,1];
M.var_ind{s,e} = [7,5,4];
M.w_ind{s,e} = [];
M.delta{s,e} = @(t,x,xi,u)[xi(32);xi(30)];
M.ddeltadxi{s,e} = @(t,x,dxdxi,xi,u)bsxfun(@plus, [0;0],...
	[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1;...
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0]);

M.mu{s,e} = @(t,x,delta,xi,u) [x(:,1) - sqrt(2/pi)*delta(1),x(:,2) - sqrt(2/pi)*delta(2)];

M.dmudxi{s,e} = @(t,x,dxdxi,delta,ddeltadxi,xi,u) func_dmudxi_skew_norm(t,x,dxdxi,delta,ddeltadxi,xi,u,2);

M.Sigma{s,e} = @(t,x,delta,xi,u) func_Sigma_skew_norm(t,x,delta,xi,2,[10^(2*xi(28));10^(2*xi(26))],'additive');
M.dSigmadxi{s,e} = @(t,x,dxdxi,delta,ddeltadxi,xi,u) func_dSigmadxi_skew_norm(t,x,dxdxi,delta,ddeltadxi,xi,2,[10^(2*xi(28));10^(2*xi(26))],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2*10^(2*xi(28))*log(10),0,0,0,0;...
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2*10^(2*xi(26))*log(10),0,0,0,0,0,0],'additive');

M.w{s,e} = @(t,x,xi,u)[1 - xi(29)];
M.dwdxi{s,e} = @(t,x,dxdxi,xi,u)bsxfun(@plus, [0],...
	[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1,0,0,0]);
M.distribution{s,e} = 'skew_norm';

M.u{s,e} = [1];
r=1;
M.scaling{r,e} = @(xi,u)[10^xi(21);10^xi(17)];
M.offset{r,e} = @(xi,u)[10^xi(22);10^xi(18)];
M.dscalingdxi{r,e} = @(xi,u)[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10^xi(21)*log(10),0,0,0,0,0,0,0,0,0,0,0;...
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10^xi(17)*log(10),0,0,0,0,0,0,0,0,0,0,0,0,0,0,0];
M.doffsetdxi{r,e} = @(xi,u)[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10^xi(22)*log(10),0,0,0,0,0,0,0,0,0,0;...
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10^xi(18)*log(10),0,0,0,0,0,0,0,0,0,0,0,0,0,0];


parameters.name = {'log_{10}(k_1)',...
'log_{10}(k_2)',...
'log_{10}(k_4)',...
'log_{10}(k_5)',...
'log_{10}(\beta_{k_3[TrkA]_{0,1}})',...
'log_{10}(\beta_{k_3[TrkA]_{0,2}})',...
'log_{10}(\beta_{c_P^{1}[Erk]_{0}})',...
'log_{10}(\sigma_{T,1})',...
'log_{10}(\sigma_{T,2})',...
'log_{10}(\sigma_{E})',...
'log_{10}(\sigma_{TE})',...
'log_{10}(o_P^{1})',...
'log_{10}(c_P^{2})',...
'log_{10}(o_P^{2})',...
'log_{10}(c_P^{3})',...
'log_{10}(o_P^{3})',...
'log_{10}(c_P^{4})',...
'log_{10}(o_P^{4})',...
'log_{10}(c_T/k_3)',...
'log_{10}(o_T)',...
'log_{10}(c_E/c_P^{1})',...
'log_{10}(o_E)',...
'log_{10}(\sigma_{P,noise}^{1})',...
'log_{10}(\sigma_{P,noise}^{2})',...
'log_{10}(\sigma_{P,noise}^{3})',...
'log_{10}(\sigma_{P,noise}^{4})',...
'log_{10}(\sigma_{T,noise})',...
'log_{10}(\sigma_{E,noise})',...
'w_1',...
'\\delta_P',...
'\\delta_T',...
'\\delta_E'};
parameters.number = length(parameters.name);
parameters.max = [6;6;6;6;6;6;6;6;6;6;6;6;6;6;6;6;6;6;6;6;6;6;6;6;6;6;6;6;1;500;500;500];
parameters.min = [-6;-6;-6;-6;-6;-6;-6;-6;-6;-6;-6;-6;-6;-6;-6;-6;-6;-6;-6;-6;-6;-6;-6;-6;-6;-6;-6;-6;0;-500;-500;-500];
