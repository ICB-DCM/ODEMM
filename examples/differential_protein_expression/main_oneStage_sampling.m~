clear all
close all
clc

load('./project/results/results_diffgeneexp_2D','M','D','parameters','options','conditions');

options.llh.measurement_noise = options.measurement_noise;
options.llh.noise_model = options.noise_model;
options.llh.simulate_musigma = options.simulate_musigma;

%% initialize log posterior
options.llh.prior.flag = true;
options.llh.prior.distribution = 'uniform';
options.llh.prior.min = parameters.min;
options.llh.prior.max = parameters.max;

burnin = 3e3;
options.llh.prior.flag = true; % compute only likelihoood
lambda = linspace(0,1,nTemps); % these are equidistant
options.sampling                     = PestoSamplingOptions();
options.sampling.nIterations         = 1e4;
options.sampling.sigma0              = 10*diag(ones(1,parameters.number));
options.sampling.theta0 = parameters.MS.par(:,1);
options.sampling.samplingAlgorithm   = 'PT';
options.sampling.PT.nTemps           = nTemps;
options.sampling.mode = 'text';

timestart = tic;
parameters = getParameterSamples(parameters, ...
    @(xi) logLikelihood(xi,M,D,options.llh,conditions), options.sampling);
save(['results_sampling_diffgeneexp_2D_PT'])
[z,~]=gewekeTest(squeeze(parameters.S.par(:,burnin+1:end))',0.1,0.5);
parameters.S.max_zscore = max(abs(z));

while max(parameters.S.max_zscore) > 2
    burnin = burnin + 1e3;
    options.sampling.nIterations = 2*options.sampling.nIterations;
    for iTemp = 1:nTemps
        options.sampling.sigma0(:,:,iTemp) = parameters.S.sigmaHist(:,:,iTemp)*...
            parameters.S.sigmaScale(end,iTemp).^2;
    end
    options.sampling.theta0 = squeeze(parameters.S.par(:,end,:));
    parameters_more = getParameterSamples(parameters,...
        @(xi) logLikelihood(xi,M,D,options.llh,conditions), options.sampling);
    parameters = mergeParametersSamples(parameters,parameters_more);
    [z,~]=gewekeTest(squeeze(parameters.S.par(:,burnin+1:end,end))',0.1,0.5);
    parameters.S.max_zscore(iTemp) = max(abs(z));
    save(['results_sampling_diffgeneexp_2D_PT'])
    max(parameters.S.max_zscore)
end
parameters.S.t_cpu = toc(timestart);
%% visualization
parameters.name{6} = 'log_{10}(\beta_{\gamma})';

close all
load_plot_settings
thin = 1;
nbin = 25;
for iParam = 1:parameters.number
    subplot(3,3,iParam)
    [N,X] = hist(parameters.S.par(iParam,burnin+1:thin:end,1),nbin);
    h = bar(X,N/max(N),1,'facecolor',[0.8,0.8,0.8],'edgecolor',[0.4,0.4,0.4]); hold on; 
    plot(parameters.P(iParam).par(iParam,:),parameters.P(iParam).R,'LineWidth',1.5,...
        'color',color.SP);
    xlabel(parameters.name{iParam});
    box off
    set(gca,'TickDir','out')
end

set(gcf, 'PaperUnits','centimeters', 'PaperPosition',[0 0 13.5 6])
print('-depsc','./project/figures/sampleVSProfile');

